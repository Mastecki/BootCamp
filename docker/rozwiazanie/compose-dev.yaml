services:
  web:
    build:
      context: ./web
      target: dev-envs
    ports:
      - 8081:80
    networks:
      - private-backend
      - public-frontend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  words:
    build:
      context: ./words
      target: dev-envs
    ports:
      - 8080:8080
    networks:
      - private-backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  db:
    image: postgres:15.2
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: my_own_password
    volumes:
      - "postgres:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - private-backend

  db-schema:
    image: postgres:15.2
    environment:
      PGPASSWORD: my_own_password
    command: psql -U postgres -d postgres -a -f words.sql -h db
    volumes:
      - ./db/words.sql:/words.sql
    depends_on:
      db:
        condition: service_healthy
    networks:
      - private-backend

  proxy:
    image: nginx:1.23.3
    volumes:
      - ./proxy/proxy.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - public-frontend

volumes:
  postgres:

networks:
  private-backend:
  public-frontend:
